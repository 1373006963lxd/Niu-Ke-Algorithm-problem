import org.aspectj.lang.annotation.Before;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.concurrent.*;

/**
 * @desc
 * @date 2020/7/6 上午9:59
 */
/*class RunnableTask implements Runnable{

    String s;

    public RunnableTask(){

    }

    public RunnableTask(String s){
        this.s = s;
    }

    @Override
    public void run() {
        System.out.println(Thread.currentThread().getName()+System.currentTimeMillis()+"开始");
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println(Thread.currentThread().getName()+System.currentTimeMillis()+"结束");
    }
}*/
/*class CallTask implements Callable{

    String s;
    public CallTask(String s){
        this.s = s;
    }

    @Override
    public Object call() throws Exception {
        Thread.sleep(1000);
        //返回执行当前 Callable 的线程名字
        return Thread.currentThread().getName()+"执行"+s;
    }
}*/
class ThreadTask implements Runnable{

    int s;
    public ThreadTask(int s){
        this.s = s;
    }

    public void run() {
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println(Thread.currentThread().getName()+"打印"+s);
    }
}
public class ThreadPoll {
    /*public  static final int CorePollSize= 5;
    public static final int MaxPollSize = 10;
    public static final int Keep_Alive_Time = 1;
    public static final int Queue_Capacity = 100;
*/
    public static void main(String[] args) {
        int k = 1;
        for(int j=1;j<10;j++) {
            for (int i = 1; i < 10; i++) {
                ThreadTask thread = new ThreadTask( k++);
                Thread thread1 = new Thread(thread);
                thread1.start();
                thread1.setName("Thread" + i);
                try {
                    thread1.join();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }

        /*ThreadPoolExecutor executor = new ThreadPoolExecutor(CorePollSize,
                MaxPollSize, Keep_Alive_Time, TimeUnit.SECONDS,
                new ArrayBlockingQueue<>(Queue_Capacity),new ThreadPoolExecutor.CallerRunsPolicy());
        List<Future<String>>  list = new ArrayList<>();*/
        /*for(int i=1;i<100;i++){
            CallTask callTask = new CallTask(i+"");
            Future<String> futures = executor.submit(callTask);
            list.add(futures);
        }
        for(Future<String> future:list){
            try {
                System.out.println(new Date() + "::" + future.get());
            } catch (InterruptedException | ExecutionException e) {
                e.printStackTrace();
            }
        }*/


        /*for(int i=0;i<2;i++) {
            RunnableTask task = new RunnableTask(i+"");
            executor.execute(task);
        }*/
//        executor.shutdown();
    }
}
